"use strict";angular.module("clicheApp",["ngResource","ngRoute","ui.bootstrap","ngPrettyJson","LocalForageModule"]).config(["$routeProvider","$httpProvider","$localForageProvider",function(a,b,c){a.when("/",{templateUrl:"views/home.html",controller:"HomeCtrl"}).otherwise({redirectTo:"/"}),b.interceptors.push("HTTPInterceptor"),c.config({name:"clicheApp",version:1,storeName:"clicheDB"})}]),angular.module("clicheApp").run(["$templateCache",function(a){a.put("views/home.html",'<div ng-class="$parent.view.classes" loading="view.loading"><!--<div class="row">--><div class="col" ng-class="{\'col-md-7\': view.showTrace, \'col-md-12\': !view.showTrace}"><div class="heading row"><div ng-class="{\'col-md-12\': view.showTrace, \'col-md-8 col-md-offset-2\': !view.showTrace}"><ul class="nav nav-tabs nav-tabs-steps regular"><li class="logo"><a ng-href="#/"><span>cli</span>che</a></li><li ng-class="{active: view.tab === \'general\'}"><a href ng-click="switchTab(\'general\')">General</a></li><li ng-class="{active: view.tab === \'inputs\'}"><a href ng-click="switchTab(\'inputs\')">Inputs</a></li><li ng-class="{active: view.tab === \'outputs\'}"><a href ng-click="switchTab(\'outputs\')">Outputs</a></li><li ng-class="{active: view.tab === \'adapter\'}"><a href ng-click="switchTab(\'adapter\')">Adapter</a></li><li ng-class="{active: view.tab === \'values\'}"><a href ng-click="switchTab(\'values\')">Values</a></li><li class="pull-right"><a href ng-click="toggleTrace()" class="toggle-trace" tooltip="{{ view.showTrace ? \'hide\' : \'show\' }} trace" tooltip-append-to-body="true" tooltip-placement="right"><i class="glyphicon" ng-class="{\'glyphicon-pause\': view.showTrace, \'glyphicon-play\': !view.showTrace}"></i></a></li></ul><ul class="nav nav-tabs nav-tabs-steps mobile"><li class="logo"><a ng-href="#/"><span>cli</span>che</a></li><li ng-class="{active: view.tab === \'general\'}"><a href ng-click="switchTab(\'general\')">G</a></li><li ng-class="{active: view.tab === \'inputs\'}"><a href ng-click="switchTab(\'inputs\')">I</a></li><li ng-class="{active: view.tab === \'outputs\'}"><a href ng-click="switchTab(\'outputs\')">O</a></li><li ng-class="{active: view.tab === \'adapter\'}"><a href ng-click="switchTab(\'adapter\')">A</a></li><li ng-class="{active: view.tab === \'values\'}"><a href ng-click="switchTab(\'values\')">V</a></li><li class="pull-right"><a href ng-click="toggleTrace()" class="toggle-trace"><i class="glyphicon" ng-class="{\'glyphicon-pause\': view.showTrace, \'glyphicon-play\': !view.showTrace}"></i></a></li></ul></div></div><!-- # .heading --><div class="row"><div ng-class="{\'col-md-12\': view.showTrace, \'col-md-8 col-md-offset-2\': !view.showTrace}"><ng-form class="form" name="forms.toolForm" role="form" novalidate><div class="tabs left"><ng-include src="view.tabViewPath"></ng-include></div></ng-form></div></div></div><div class="col col-md-5" ng-show="view.showTrace"><div class="heading"><ul class="nav nav-tabs nav-tabs-trace"><li class="pull-right" ng-class="{active: view.trace === \'console\'}"><a href ng-click="switchTrace(\'console\')">Console</a></li><li class="pull-right" ng-class="{active: view.trace === \'job\'}"><a href ng-click="switchTrace(\'job\')">Job JSON</a></li><li class="pull-right" ng-class="{active: view.trace === \'tool\'}"><a href ng-click="switchTrace(\'tool\')">Tool JSON</a></li></ul></div><div class="tabs right" ng-switch="view.trace"><div class="tab" ng-switch-when="tool"><pre class="json-trace" pretty-json="view.toolForm"></pre></div><div class="tab" ng-switch-when="job"><pre class="json-trace" pretty-json="view.jobForm"></pre></div><div class="tab" ng-switch-when="console"><pre class="console-trace">{{ view.command }}</pre></div></div></div><!--</div>--></div>'),a.put("views/inputs/input-array.html",'<div class="form-group" ng-class="{required: prop.required, \'has-error\': ((view.input.length < prop.minItems && prop.minItems > 0) || (view.input.length > prop.maxItems && prop.maxItems > 0))}"><label class="control-label">{{ key }} <span ng-if="prop.minItems || prop.maxItems">(<strong ng-if="prop.minItems">min: {{ prop.minItems }}</strong> <strong ng-if="prop.maxItems">max: {{ prop.maxItems }}</strong>)</span></label><enum ng-model="view.input" type="prop.items.type" min="prop.minItems" max="prop.maxItems" is-required="prop.required"></enum></div>'),a.put("views/inputs/input-boolean.html",'<div class="form-group" ng-class="{required: prop.required, \'has-error\': inputForm[\'input-\' + prop.type].$invalid && form.$dirty}"><div class="checkbox"><label><input type="checkbox" name="input-boolean" ng-model="view.input"> {{ key }}</label></div></div>'),a.put("views/inputs/input-file.html",'<div class="form-group" ng-class="{required: prop.required, \'has-error\': inputForm[\'input-\' + prop.type].$invalid && form.$dirty}"><label class="control-label">{{ key }}</label><input type="text" class="form-control" name="input-file" ng-model="view.input.path" ng-required="prop.required"></div>'),a.put("views/inputs/input-integer.html",'<div class="form-group" ng-class="{required: prop.required, \'has-error\': inputForm[\'input-\' + prop.type].$invalid && form.$dirty}"><label class="control-label">{{ key }}</label><input type="number" class="form-control" name="input-integer" ng-model="view.input" ng-required="prop.required"></div>'),a.put("views/inputs/input-string.html",'<div class="form-group" ng-class="{required: prop.required, \'has-error\': inputForm[\'input-\' + prop.type].$invalid && form.$dirty}"><label class="control-label">{{ key }}</label><input ng-show="!prop.enum" type="text" class="form-control" name="input-string" ng-model="view.input" ng-required="prop.required"><select ng-show="prop.enum" class="form-control" name="input-string" ng-model="view.input" ng-required="prop.required"><option value>-- choose --</option><option ng-repeat="option in prop.enum track by $index" value="option">{{ (option === \'\') ? \'empty value\' : option }}</option></select></div>'),a.put("views/partials/add-property-arg.html",'<div class="modal-header"><button type="button" class="close" ng-click="cancel()"><span>&times;</span><span class="sr-only">Close</span></button><h4 class="modal-title">Add Argument</h4></div><div class="modal-body"><form ng-submit="addProperty()" name="view.form" novalidate><div class="row"><div class="col-md-4"><div class="form-group"><label for="value-from" class="control-label">Value From</label><select class="form-control" id="value-from" name="valueFrom" ng-change="changeValueFrom()" ng-model="view.property.valueFrom" ng-options="key as key for (key, value) in options.valuesFrom"><option value>-- none --</option></select></div></div><div class="col-md-3"><div class="form-group"><label class="control-label" for="prefix">Prefix</label><input type="text" class="form-control" id="prefix" name="prefix" ng-model="view.property.prefix"></div></div><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.separator.$invalid && view.form.$dirty)}"><label class="control-label" for="separator">Separator</label><select class="form-control" id="separator" name="separator" ng-model="view.property.separator" required><option value="">empty string</option><option value="_">space</option><option value="=">=</option></select></div></div></div><div class="row"><div class="col-md-4"><div class="form-group" ng-class="{\'has-error\': (view.form.value.$invalid && view.form.$dirty)}"><label for="value" class="control-label">Value</label><input type="text" class="form-control" id="value" name="value" ng-model="view.property.value" required></div></div><div class="col-md-2"><div class="form-group" ng-class="{\'has-error\': (view.form.order.$invalid && view.form.$dirty)}"><label for="order" class="control-label">Order</label><input type="number" class="form-control" id="order" name="order" ng-model="view.property.order"></div></div></div><div class="form-group main-actions"><a href class="btn btn-warning" ng-click="cancel()">Cancel</a> <button type="submit" class="btn btn-primary">Save</button></div></form></div>'),a.put("views/partials/add-property-input.html",'<div class="modal-header"><button type="button" class="close" ng-click="cancel()"><span>&times;</span><span class="sr-only">Close</span></button><h4 class="modal-title">Add Input Property</h4></div><div class="modal-body"><form ng-submit="addProperty()" name="view.form" novalidate><div class="row"><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.name.$invalid && view.form.$dirty)}"><label class="control-label" for="name">Name</label><input type="text" class="form-control" id="name" name="name" ng-model="view.name" required></div></div><!-- END Name --><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.type.$invalid && view.form.$dirty)}"><label class="control-label" for="type">Type</label><select class="form-control" id="type" name="type" ng-model="view.property.type" required><option value="file">file</option><option value="string">string</option><option value="integer">integer</option><option value="array">array</option><option value="boolean">boolean</option></select></div></div><!-- END Type --><div class="col-md-3"><div class="form-group"><label class="control-label" for="prefix">Prefix</label><input type="text" class="form-control" id="prefix" name="prefix" ng-model="view.property.adapter.prefix"></div></div><!-- END Prefix --><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.separator.$invalid && view.form.$dirty)}"><label class="control-label" for="separator">Separator</label><select class="form-control" id="separator" name="separator" ng-model="view.property.adapter.separator" required><option value="">empty string</option><option value="_">space</option><option value="=">=</option></select></div></div><!-- END Separator --></div><div class="row"><div class="col-md-4"><div class="form-group"><label class="control-label" for="transform">Transform</label><select class="form-control" id="transform" name="transform" ng-model="view.property.adapter.transform" ng-options="transform for transform in options.platformFeatures"><option value="">-- none --</option></select></div></div><!-- END Transform --><div class="col-md-4"><div class="form-group" ng-class="{\'has-error\': (view.form.order.$invalid && view.form.$dirty)}"><label class="control-label" for="order">Order</label><input type="number" class="form-control" id="order" name="order" ng-model="view.property.adapter.order"></div></div><!-- END Order --><div class="col-md-4"><div class="form-group" ng-if="view.property.type === \'string\'"><label class="empty-label">&nbsp;</label><div class="checkbox"><label><input type="checkbox" ng-model="view.isEnum" ng-change="toggleEnum()"> Enum</label></div></div></div><!-- END Eum --><div class="col-md-4" ng-if="view.property.type === \'file\'"><div class="form-group"><label class="empty-label">&nbsp;</label><div class="checkbox"><label><input type="checkbox" ng-model="view.property.adapter.streamable"> Streamable</label></div></div></div><!-- END Streamable --></div><div class="row" ng-if="view.property.type === \'array\'"><div class="col-md-2"><div class="form-group" ng-class="{\'has-error\': (view.form.min.$invalid && view.form.$dirty)}"><label class="control-label" for="min" class="control-label">Min</label><input type="number" class="form-control" id="min" name="min" ng-model="view.property.minItems" min="0"></div></div><!-- END Min --><div class="col-md-2"><div class="form-group" ng-class="{\'has-error\': (view.form.max.$invalid && view.form.$dirty)}"><label class="control-label" for="max" class="control-label">Max</label><input type="number" class="form-control" id="max" name="max" ng-model="view.property.maxItems" min="0"></div></div><!-- END Max --><div class="col-md-4"><div class="form-group"><label class="control-label" for="item-type" class="control-label">Item Type</label><select class="form-control" id="item-type" name="itemType" ng-model="view.property.items.type"><option value="">-- choose --</option><option value="string">string</option><option value="number">number</option><option value="file">file</option></select></div></div><!-- END Item Type --><div class="col-md-4"><div class="form-group"><label class="control-label" for="item-separator" class="control-label">Item Separator</label><select class="form-control" id="item-separator" name="itemSeparator" ng-model="view.property.adapter.listSeparator"><option value="">-- choose --</option><option value=",">,</option><option value=";">;</option><option value="_">space</option><option value="repeat">repeat</option></select></div></div><!-- END Item Separator --></div><div class="row" ng-if="view.property.type === \'array\' && view.property.items.type === \'file\'"><div class="col-md-4"><div class="form-group"><label class="control-label" for="item-transform" class="control-label">Item Transform</label><select class="form-control" id="item-transform" name="item-transform" ng-model="view.property.adapter.listTransform" ng-options="transform for transform in options.platformFeatures"><option value="">-- none --</option></select></div></div><!-- END Transform --><div class="col-md-3"><div class="form-group"><label class="empty-label">&nbsp;</label><div class="checkbox"><label><input type="checkbox" ng-model="view.property.adapter.streamable"> Item Streamable</label></div></div></div><!-- END Item Streamable --></div><div class="row" ng-if="view.isEnum"><div class="col-md-12"><enum ng-model="view.property.enum" type="string" min="1" is-required="true"></enum></div></div><div class="form-group main-actions"><a href class="btn btn-warning" ng-click="cancel()">Cancel</a> <button type="submit" class="btn btn-primary">Save</button></div></form></div>'),a.put("views/partials/add-property-output.html",'<div class="modal-header"><button type="button" class="close" ng-click="cancel()"><span>&times;</span><span class="sr-only">Close</span></button><h4 class="modal-title">Add Output Property</h4></div><div class="modal-body"><form ng-submit="addProperty()" name="view.form" novalidate><div class="row"><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.name.$invalid && view.form.$dirty)}"><label class="control-label" for="name">Name</label><input type="text" class="form-control" id="name" name="name" ng-model="view.name" required></div></div><!-- END Name --><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (view.form.type.$invalid && view.form.$dirty)}"><label class="control-label" for="type">Type</label><select class="form-control" id="type" name="type" ng-model="view.property.type" required><option value="file">file</option><option value="directory">directory</option><option value="array">array</option></select></div></div><div class="col-md-3"><div class="form-group"><label class="control-label" for="glob">Glob</label><input type="text" class="form-control" id="glob" name="glob" ng-model="view.property.glob"></div></div><div class="col-md-3" ng-if="view.property.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox"><label><input type="checkbox" ng-model="view.property.adapter.streamable"> Streamable</label></div></div></div></div><div class="row" ng-if="view.property.type === \'array\'"><div class="col-md-3"><div class="form-group"><label for="item-min" class="control-label">Min</label><input type="number" class="form-control" id="item-min" name="itemMin" ng-model="view.property.minItems" min="0"></div></div><!-- END Min --><div class="col-md-3"><div class="form-group"><label for="item-max" class="control-label">Max</label><input type="number" class="form-control" id="item-max" name="itemMax" ng-model="view.property.maxItems" min="0"></div></div><!-- END Max --><div class="col-md-3"><div class="form-group"><label for="item-type" class="control-label">Item Type</label><select class="form-control" id="item-type" name="itemType" ng-model="view.property.items.type"><option value>-- choose --</option><option value="file">file</option><option value="directory">directory</option></select></div></div><!-- END Item Type --><div class="col-md-2" ng-if="view.property.items.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="view.property.adapter.listStreamable"> Streamable</label></div></div></div><!-- END Item Streamable --></div><div class="form-group main-actions"><a href class="btn btn-warning" ng-click="cancel()">Cancel</a> <button type="submit" class="btn btn-primary">Save</button></div></form></div>'),a.put("views/partials/argument.html",'<div class="argument-wrap" ng-class="{active: active}"><legend class="legend-tiny toggle" ng-class="{active: active}" ng-click="toggleArgument()">arg{{ name }} <span class="remove" ng-click="removeItem($event)">&times;</span></legend><div class="property-body"><div class="row"><div class="col-md-4"><div class="form-group"><label for="argument-valuefrom-{{ view.uniqueId }}" class="control-label">Value From</label><select class="form-control" id="argument-valuefrom-{{ view.uniqueId }}" name="{{ name }}-valuefrom" ng-change="changeValueFrom()" ng-model="arg.valueFrom" ng-options="key as key for (key, value) in valuesFrom"><option value>-- none --</option></select></div></div><!-- END Value From --><div class="col-md-2"><div class="form-group"><label for="argument-prefix-{{ view.uniqueId }}" class="control-label">Prefix</label><input type="text" class="form-control" id="argument-prefix-{{ view.uniqueId }}" name="{{ name }}-prefix" ng-model="arg.prefix"></div></div><!-- END Prefix --><div class="col-md-2"><div class="form-group"><label for="argument-separator-{{ view.uniqueId }}" class="control-label">Separator</label><select class="form-control" id="argument-separator-{{ view.uniqueId }}" name="{{ name }}-separator" ng-model="arg.separator"><option value="">empty string</option><option value="_">space</option><option value="=">=</option></select></div></div><!-- END Separator --><div class="col-md-2"><div class="form-group"><label for="argument-value-{{ view.uniqueId }}" class="control-label">Value</label><input type="text" class="form-control" id="argument-value-{{ view.uniqueId }}" name="{{ name }}-value" ng-model="arg.value"></div></div><!-- END Value --><div class="col-md-2"><div class="form-group"><label for="argument-order-{{ view.uniqueId }}" class="control-label">Order</label><input type="number" class="form-control" id="argument-order-{{ view.uniqueId }}" name="{{ name }}-order" ng-model="arg.order"></div></div><!-- END Order --></div></div></div>'),a.put("views/partials/confirm-delete.html",'<div class="modal-body"><h4 class="center-block">Are you sure you want to delete this item?</h4><div class="center-block"><button class="btn btn-default" ng-click="cancel()">No</button> <button class="btn btn-danger" ng-click="ok()">Yes</button></div></div>'),a.put("views/partials/enum.html",'<div class="enum-list-wrap"><a href ng-click="addItem()" class="btn btn-default add-enum-item" ng-class="{disabled: max && list.length >= max}"><i class="glyphicon glyphicon-plus"></i></a><div class="enum-list-container"><ul class="enum-list" ng-class="{wide: min && list.length <= min}"><li ng-repeat="item in list track by $index"><div class="form-group" ng-class="{\'has-error\': isRequired && item.value === \'\'}"><input ng-if="(type === \'file\')" type="string" class="form-control" ng-model="item.value.path" placeholder="Enter Value" ng-required="isRequired"> <input ng-if="!(type === \'file\')" type="{{ type }}" class="form-control" ng-model="item.value" placeholder="Enter Value" ng-required="isRequired"></div><a href ng-hide="min && list.length <= min" class="glyphicon glyphicon-remove remove-btn" ng-click="removeItem($index)"></a></li></ul><p ng-if="list.length === 0" class="alert alert-info">Click + on the left to add some elements</p></div></div>'),a.put("views/partials/error.html",'<div class="general-error alert alert-danger" ng-class="{show: errorMessages.length > 0}"><button type="button" class="close" ng-click="closeError()"><span>&times;</span><span class="sr-only">Close</span></button><p ng-repeat="message in errorMessages">{{ message }}</p></div>'),a.put("views/partials/input-field.html",'<ng-form name="inputForm" class="input-property"></ng-form>'),a.put("views/partials/io-file.html",'<div class="row"><div class="col-md-4"><input type="text" class="form-control" name="{{ name }}-path" ng-model="file.path" placeholder="Path" required></div><div class="col-md-4"><input type="text" class="form-control" name="{{ name }}-size" ng-model="file.size" placeholder="Size" required></div><div class="col-md-4"><input type="text" class="form-control" name="{{ name }}-checksum" ng-model="file.checksum" placeholder="Checksum" required></div></div>'),a.put("views/partials/options.html",'<div class="modal-header"><button type="button" class="close" ng-click="cancel()"><span>&times;</span><span class="sr-only">Close</span></button><h4 class="modal-title">Options</h4></div><div class="modal-body"><div class="row"><div class="col-md-6"><p>You can (re)generate your token</p><button class="btn btn-primary" ng-click="generateToken()" ng-disabled="view.generating">(Re)generate Token</button></div><div class="col-md-6"><p>You can revoke your token</p><button class="btn btn-primary" ng-click="revokeToken()" ng-disabled="view.revoking">Revoke Token</button></div></div><p ng-if="view.trace !== \'\'" class="alert alert-success">{{ view.trace }}</p></div><div class="modal-footer"><button class="btn btn-warning" ng-click="cancel()">Close</button></div>'),a.put("views/partials/property-input.html",'<div class="property-wrap" ng-class="{active: active}"><legend class="legend-tiny toggle" ng-class="{active: active}" ng-click="toggleProperty()">{{ name }}<div class="checkbox"><label><input type="checkbox" ng-model="prop.required"> required</label></div><span class="remove" ng-click="removeItem($event)">&times;</span></legend><div class="property-body"><div class="row"><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (form[name+\'-type\'].$invalid && form[name].$dirty)}"><label for="property-input-type-{{ view.uniqueId }}" class="control-label">Type</label><select class="form-control" id="property-input-type-{{ view.uniqueId }}" name="{{ name }}-type" ng-model="prop.type"><option value="file">file</option><option value="string">string</option><option value="integer">integer</option><option value="array">array</option><option value="boolean">boolean</option></select></div></div><!-- END Type --><div class="col-md-1"><div class="form-group"><label for="property-prefix-{{ view.uniqueId }}" class="control-label">Prefix</label><input type="text" class="form-control" id="property-prefix-{{ view.uniqueId }}" name="{{ name }}-prefix" ng-model="prop.adapter.prefix"></div></div><!-- END Prefix --><div class="col-md-2"><div class="form-group"><label for="property-separator-{{ view.uniqueId }}" class="control-label">Separator</label><select class="form-control" id="property-separator-{{ view.uniqueId }}" name="{{ name }}-separator" ng-model="prop.adapter.separator"><option value="">empty string</option><option value="_">space</option><option value="=">=</option></select></div></div><!-- END Separator --><div class="col-md-2"><div class="form-group"><label for="property-transform-{{ view.uniqueId }}" class="control-label">Transform</label><select class="form-control" id="property-transform-{{ view.uniqueId }}" name="{{ name }}-transform" ng-model="prop.adapter.transform" ng-options="transform for transform in transforms"><option value="">-- none --</option></select></div></div><!-- END Transform --><div class="col-md-2"><div class="form-group"><label for="property-order-{{ view.uniqueId }}" class="control-label">Order</label><input type="number" class="form-control" id="property-order-{{ view.uniqueId }}" name="{{ name }}-order" ng-model="prop.adapter.order"></div></div><!-- END Order --><div class="col-md-2" ng-if="prop.type === \'string\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="view.isEnum" ng-change="toggleEnum()"> Enum</label></div></div></div><!-- END Enum --><div class="col-md-2" ng-if="prop.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="prop.adapter.streamable"> Streamable</label></div></div></div><!-- END Streamable --></div><div class="row" ng-if="prop.type === \'array\'"><div class="col-md-2"><div class="form-group"><label for="property-item-min-{{ view.uniqueId }}" class="control-label">Min</label><input type="number" class="form-control" id="property-item-min-{{ view.uniqueId }}" name="{{ name }}-item-min" ng-model="prop.minItems" min="0"></div></div><!-- END Min --><div class="col-md-2"><div class="form-group"><label for="property-item-max-{{ view.uniqueId }}" class="control-label">Max</label><input type="number" class="form-control" id="property-item-max-{{ view.uniqueId }}" name="{{ name }}-item-max" ng-model="prop.maxItems" min="0"></div></div><!-- END Max --><div class="col-md-2"><div class="form-group"><label for="property-item-type-{{ view.uniqueId }}" class="control-label">Item Type</label><select class="form-control" id="property-item-type-{{ view.uniqueId }}" name="{{ name }}-item-type" ng-model="prop.items.type"><option value="">-- choose --</option><option value="string">string</option><option value="number">number</option><option value="file">file</option></select></div></div><!-- END Item Type --><div class="col-md-2"><div class="form-group"><label for="property-item-separator-{{ view.uniqueId }}" class="control-label">Item Separator</label><select class="form-control" id="property-item-separator-{{ view.uniqueId }}" name="{{ name }}-item-separator" ng-model="prop.adapter.listSeparator"><option value="">-- choose --</option><option value=",">,</option><option value=";">;</option><option value=" ">space</option><option value="repeat">repeat</option></select></div></div><!-- END Item Separator --><div class="col-md-2" ng-if="prop.items.type === \'file\'"><div class="form-group"><label for="property-item-transform-{{ view.uniqueId }}" class="control-label">Transform</label><select class="form-control" id="property-item-transform-{{ view.uniqueId }}" name="{{ name }}-item-transform" ng-model="prop.adapter.listTransform" ng-options="transform for transform in transforms"><option value="">-- none --</option></select></div></div><!-- END Transform --><div class="col-md-2" ng-if="prop.items.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="prop.adapter.listStreamable"> Streamable</label></div></div></div><!-- END Item Streamable --></div><div class="row" ng-if="view.isEnum"><div class="col-md-12"><enum ng-model="prop.enum" type="string" min="1" is-required="true"></enum></div></div></div></div>'),a.put("views/partials/property-output.html",'<div class="property-wrap" ng-class="{active: active}"><legend class="legend-tiny toggle" ng-class="{active: active}" ng-click="toggleProperty()">{{ name }}<div class="checkbox"><label><input type="checkbox" ng-model="prop.required"> required</label></div><span class="remove" ng-click="removeItem($event)">&times;</span></legend><div class="property-body"><div class="row"><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (form[name+\'-type\'].$invalid && form[name].$dirty)}"><label for="property-output-type-{{ view.uniqueId }}" class="control-label">Type</label><select class="form-control" id="property-output-type-{{ view.uniqueId }}" name="{{ name }}-type" ng-model="prop.type"><option value="file">file</option><option value="directory">directory</option><option value="array">array</option></select></div></div><!-- END Type --><div class="col-md-3"><div class="form-group"><label for="property-glob-{{ view.uniqueId }}" class="control-label">Glob</label><input type="text" class="form-control" id="property-glob-{{ view.uniqueId }}" name="{{ name }}-glob" ng-model="prop.adapter.glob"></div></div><!-- END Prefix --><div class="col-md-2" ng-if="prop.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="prop.adapter.streamable"> Streamable</label></div></div></div><!-- END Streamable --></div><div class="row" ng-if="prop.type === \'array\'"><div class="col-md-3"><div class="form-group"><label for="property-item-min-{{ view.uniqueId }}" class="control-label">Min</label><input type="number" class="form-control" id="property-item-min-{{ view.uniqueId }}" name="{{ name }}-item-min" ng-model="prop.minItems" min="0"></div></div><!-- END Min --><div class="col-md-3"><div class="form-group"><label for="property-item-max-{{ view.uniqueId }}" class="control-label">Max</label><input type="number" class="form-control" id="property-item-max-{{ view.uniqueId }}" name="{{ name }}-item-max" ng-model="prop.maxItems" min="0"></div></div><!-- END Max --><div class="col-md-3"><div class="form-group"><label for="property-item-type-{{ view.uniqueId }}" class="control-label">Item Type</label><select class="form-control" id="property-item-type-{{ view.uniqueId }}" name="{{ name }}-item-type" ng-model="prop.items.type"><option value>-- choose --</option><option value="file">file</option><option value="directory">directory</option></select></div></div><!-- END Item Type --><div class="col-md-2" ng-if="prop.items.type === \'file\'"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox no-margin"><label><input type="checkbox" ng-model="prop.adapter.listStreamable"> Streamable</label></div></div></div><!-- END Item Streamable --></div></div></div>'),a.put("views/tabs/adapter.html",'<div class="form-group"><label class="control-label">Base Cmd</label><enum ng-model="view.toolForm.adapter.baseCmd" type="string" min="1" is-required="true"></enum></div><div class="form-group"><label for="stdout" class="control-label">Stdout</label><input type="text" class="form-control" id="stdout" name="stdout" ng-model="view.toolForm.adapter.stdout" required></div><legend class="legend-small toggle" ng-class="{active: view.propsExpanded.args}" ng-click="toggleProperties(\'args\')">Arguments<add-property type="arg" platform-features="view.toolForm.requirements.platformFeatures" values-from="view.valuesFrom"></add-property></legend><argument ng-repeat="(key, argument) in view.toolForm.adapter.args track by $index" ng-model="argument" active="view.active.args[key]" name="{{ key }}" form="forms.toolForm" values-from="view.valuesFrom"></argument>'),a.put("views/tabs/general.html",'<div class="form-group form-group-email" ng-class="{\'has-error\': (forms.toolForm.documentAuthor.$invalid && forms.toolForm.$dirty)}"><label for="documentAuthor" class="control-label">Document Author</label><input type="email" class="form-control" id="documentAuthor" name="documentAuthor" ng-model="view.toolForm.documentAuthor" required></div><legend class="legend-small">Environment</legend><div class="row"><div class="col-md-4"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RECtype.$invalid && forms.toolForm.$dirty)}"><label for="type" class="control-label">Type</label><select class="form-control" id="type" name="RECtype" ng-model="view.toolForm.requirements.environment.container.type"><option value="docker">docker</option></select></div></div><div class="col-md-4"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RECuri.$invalid && forms.toolForm.$dirty)}"><label for="uri" class="control-label">URI</label><input type="text" class="form-control" id="uri" name="RECuri" ng-model="view.toolForm.requirements.environment.container.uri" required></div></div><div class="col-md-4"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RECimageId.$invalid && forms.toolForm.$dirty)}"><label for="uri" class="control-label">Image Id</label><input type="text" class="form-control" id="imageId" name="RECimageId" ng-model="view.toolForm.requirements.environment.container.imageId" required></div></div></div><!-- END Requirements -> Environment --><legend class="legend-small">Resources</legend><div class="row"><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RRcpu.$invalid && forms.toolForm.$dirty)}"><label for="cpu" class="control-label">CPU</label><input type="number" class="form-control" id="cpu" name="RRcpu" ng-model="view.toolForm.requirements.resources.cpu" min="0" required></div></div><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RRmem.$invalid && forms.toolForm.$dirty)}"><label for="mem" class="control-label">Memory</label><input type="number" class="form-control" id="mem" name="RRmem" ng-model="view.toolForm.requirements.resources.mem" min="0" required></div></div><div class="col-md-3"><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RRdiskSpace.$invalid && forms.toolForm.$dirty)}"><label for="diskSpace" class="control-label">Disk Space</label><input type="number" class="form-control" id="diskSpace" name="RRdiskSpace" ng-model="view.toolForm.requirements.resources.diskSpace" min="0" required></div></div><div class="col-md-3"><div class="form-group"><label class="control-label empty-label">&nbsp;</label><div class="checkbox"><label><input type="checkbox" ng-model="view.toolForm.requirements.resources.network"> Network</label></div></div></div></div><div class="form-group" ng-class="{\'has-error\': (forms.toolForm.RplatformFeatures.$invalid && forms.toolForm.$dirty)}"><label class="control-label">Platform Features</label><div class="checkbox" ng-repeat="(key, val) in view.transforms"><label><input type="checkbox" ng-model="view.transforms[key]" ng-change="toggleTransformsList(key)"> {{ key }}</label></div></div><!-- END Requirements -> Resources -->'),a.put("views/tabs/inputs.html",'<legend class="legend-small toggle" ng-class="{active: view.propsExpanded.inputs}" ng-click="toggleProperties(\'inputs\')">Properties<add-property type="input" platform-features="view.toolForm.requirements.platformFeatures" values-from="view.valuesFrom"></add-property></legend><property-input ng-repeat="(key, property) in view.toolForm.inputs.properties" ng-model="property" active="view.active.inputs[key]" name="{{ key }}" form="forms.toolForm" required-inputs="view.toolForm.inputs.required" transforms="view.toolForm.requirements.platformFeatures"></property-input>'),a.put("views/tabs/outputs.html",'<legend class="legend-small toggle" ng-class="{active: view.propsExpanded.outputs}" ng-click="toggleProperties(\'outputs\')">Properties<add-property type="output" platform-features="view.toolForm.requirements.platformFeatures" values-from="view.valuesFrom"></add-property></legend><property-output ng-repeat="(key, property) in view.toolForm.outputs.properties" ng-model="property" active="view.active.outputs[key]" name="{{ key }}" form="forms.toolForm" required-inputs="view.toolForm.outputs.required"></property-output>'),a.put("views/tabs/values.html",'<ng-form class="form" name="forms.jobForm" role="form" novalidate><div class="input-container"><input-field ng-repeat="(key, property) in view.toolForm.inputs.properties" ng-model="view.jobForm.inputs[key]" key="{{ key }}" prop="property" form="forms.jobForm"></input-field></div></ng-form>')
}]),angular.module("clicheApp").controller("MasterCtrl",["$scope","$interval","Data",function(a,b,c){a.view={},a.view.classes=["page"],a.view.saving=!1,a.$on("classChange",function(b,c){a.view.classes=c});var d=b(function(){a.view.saving=!0,c.save().then(function(){a.view.saving=!1})},5e3);a.$on("$destroy",function(){angular.isDefined(d)&&(b.cancel(d),d=void 0)})}]),angular.module("clicheApp").controller("HomeCtrl",["$scope","$q","Data",function(a,b,c){a.$parent.view.classes.push("home","row"),a.view={},a.forms={},a.view.tab="general",a.view.trace="tool",a.view.showTrace=!0,a.view.tabViewPath="views/tabs/general.html",a.view.propsExpanded={inputs:!1,outputs:!1,args:!1},a.view.active={inputs:{},outputs:{},args:{}},a.view.valuesFrom={},a.view.toolForm=c.tool,a.view.jobForm=c.job,a.view.loading=!0,b.all([c.fetchTool(),c.fetchJob()]).then(function(){a.view.toolForm=c.tool,a.view.jobForm=c.job,a.view.loading=!1,_.each(a.view.toolForm.inputs.properties,function(a){_.isUndefined(a.adapter.separator)&&(a.adapter.separator="_"),_.isUndefined(a.adapter.listSeparator)&&(a.adapter.listSeparator="repeat")}),_.each(a.view.toolForm.adapter.args,function(b){_.isUndefined(b.separator)&&(b.separator="_"),_.isUndefined(b.valueFrom)||(b.value=a.view.valuesFrom[b.valueFrom])}),a.view.transforms={"transforms/strip_ext":!1,"transforms/m-suffix":!1},_.each(a.view.toolForm.requirements.platformFeatures,function(b){a.view.transforms[b]=!0}),_.each(a.view.jobForm.allocatedResources,function(b,c){a.view.valuesFrom["#allocatedResources/"+c]=b,a.$watch("view.toolForm.requirements.resources."+c,function(b,d){b!==d&&(a.view.jobForm.allocatedResources[c]=b,a.view.valuesFrom["#allocatedResources/"+c]=b)})})}),a.toggleTransformsList=function(b){_.contains(a.view.toolForm.requirements.platformFeatures,b)?_.remove(a.view.toolForm.requirements.platformFeatures,function(a){return b===a}):a.view.toolForm.requirements.platformFeatures.push(b)},a.toggleProperties=function(b){a.view.propsExpanded[b]=!a.view.propsExpanded[b];var c="args"!==b?a.view.toolForm[b].properties:a.view.toolForm.adapter.args;_.each(c,function(c,d){a.view.active[b][d]=a.view.propsExpanded[b]})},a.switchTab=function(b){a.view.tab=b,a.view.tabViewPath="views/tabs/"+b+".html"};var d=[],e=function(){a.view.command=c.generateCommand();var b=["view.jobForm.inputs","view.toolForm.inputs.properties","view.toolForm.adapter"];_.each(b,function(b){var e=a.$watch(b,function(b,d){b!==d&&(a.view.command=c.generateCommand())},!0);d.push(e)})},f=function(){_.each(d,function(a){_.isFunction(a)&&a.call()}),d=[]};a.switchTrace=function(b){a.view.trace=b,"console"===b?e():f()},a.toggleTrace=function(){a.view.showTrace=!a.view.showTrace,a.view.showTrace?"console"===a.view.trace&&e():"console"===a.view.trace&&f()}}]),angular.module("clicheApp").controller("AddPropertyCtrl",["$scope","$modalInstance","Data","options",function(a,b,c,d){switch(a.options=d,a.view={},d.type){case"input":a.view.property={type:"string",adapter:{separator:"_"}};break;case"output":a.view.property={type:"file"};break;case"arg":a.view.property={separator:"_"}}a.addProperty=function(){return a.view.form.$setDirty(),a.view.form.$invalid?!1:(c.addProperty(d.type,a.view.name,a.view.property),void b.close())},a.ok=function(){b.close()},a.cancel=function(){b.dismiss("cancel")},a.changeValueFrom=function(){a.view.property.value=d.valuesFrom[a.view.property.valueFrom]},a.$watch("view.property.value",function(b,c){b===c||_.isEmpty(b)||delete a.view.property.valueFrom})}]),angular.module("clicheApp").controller("ModalCtrl",["$scope","$modalInstance","data",function(a,b,c){a.data=c,a.ok=function(){b.close()},a.cancel=function(){b.dismiss("cancel")}}]),angular.module("clicheApp").directive("error",["$templateCache",function(a){return{restrict:"E",replace:!0,template:a.get("views/partials/error.html"),link:function(a){a.errorMessages=[],a.$on("httpError",function(b,c){-1===a.errorMessages.indexOf(c)&&a.errorMessages.push(c)}),a.closeError=function(){a.errorMessages=[]}}}}]),angular.module("clicheApp").directive("loading",["$timeout",function(a){return{scope:{ngClass:"=",loading:"="},link:function(b){var c,d=b.ngClass;d.push("loading"),d.push("loading-fade"),b.$watch("loading",function(e,f){e!==f&&(b.stopLoadingDelay(),_.remove(d,function(a){return"loading-fade"===a}),b.$emit("classChange",d),c=a(function(){_.remove(d,function(a){return"loading"===a}),b.$emit("classChange",d)},300))}),b.stopLoadingDelay=function(){angular.isDefined(c)&&(a.cancel(c),c=void 0)},b.$on("$destroy",function(){b.stopLoadingDelay()})}}}]),angular.module("clicheApp").directive("ioFile",["$templateCache",function(a){return{restrict:"E",replace:!0,template:a.get("views/partials/io-file.html"),scope:{file:"=ngModel",form:"=",name:"@"},link:function(a){console.log(a.file)}}}]),angular.module("clicheApp").directive("propertyInput",["$templateCache","$modal","Data",function(a,b,c){var d=0;return{restrict:"E",replace:!0,template:a.get("views/partials/property-input.html"),scope:{name:"@",prop:"=ngModel",active:"=",requiredInputs:"=",transforms:"=",form:"="},link:function(e){e.view={},d++,e.view.uniqueId=d,e.view.isEnum=_.isArray(e.prop.enum),e.toggleProperty=function(){e.active=!e.active},e.toggleEnum=function(){e.prop.enum=e.view.isEnum?[""]:null},e.removeItem=function(d){d.stopPropagation();var f=b.open({template:a.get("views/partials/confirm-delete.html"),controller:"ModalCtrl",windowClass:"modal-confirm",resolve:{data:function(){return{}}}});f.result.then(function(){c.deleteProperty("input",e.name)})}}}}]),angular.module("clicheApp").directive("propertyOutput",["$templateCache","$modal","Data",function(a,b,c){var d=0;return{restrict:"E",replace:!0,template:a.get("views/partials/property-output.html"),scope:{name:"@",prop:"=ngModel",active:"=",requiredInputs:"=",form:"="},link:function(e){e.view={},d++,e.view.uniqueId=d,e.view.isEnum=_.isArray(e.prop.enum),e.toggleProperty=function(){e.active=!e.active},e.removeItem=function(d){d.stopPropagation();var f=b.open({template:a.get("views/partials/confirm-delete.html"),controller:"ModalCtrl",windowClass:"modal-confirm",resolve:{data:function(){return{}}}});f.result.then(function(){c.deleteProperty("output",e.name)})}}}}]),angular.module("clicheApp").directive("enum",["$templateCache",function(a){return{restrict:"E",replace:!0,template:a.get("views/partials/enum.html"),scope:{model:"=ngModel",type:"=",min:"=",max:"=",isRequired:"="},link:function(a){a.list=[],_.isArray(a.model)||isNaN(a.min)?_.each(a.model,function(b){var c=b.path?b.path:b,d="file"===a.type?{value:{path:c}}:{value:c};a.list.push(d)}):_.times(a.min,function(){var b="file"===a.type?{value:{path:""}}:{value:""};a.list.push(b)}),a.addItem=function(){if(a.max&&a.list.length>=a.max)return!1;var b="file"===a.type?{value:{path:""}}:{value:""};a.list.push(b)},a.removeItem=function(b){return a.min&&a.list.length<=a.min?!1:void a.list.splice(b,1)},a.$watch("list",function(b,c){b!==c&&(a.model=_.pluck(b,"value"))},!0)}}}]),angular.module("clicheApp").directive("inputField",["$templateCache","$compile",function(a,b){var c=0;return{restrict:"E",replace:!0,template:a.get("views/partials/input-field.html"),scope:{model:"=ngModel",prop:"=",key:"@",form:"="},link:function(d,e){d.view={},c++,d.view.uniqueId=c;var f=d.model&&d.model.path?d.model.path:d.model,g="file"===d.prop.type?{path:f}:f;d.view.input=g;var h=a.get("views/inputs/input-"+d.prop.type+".html");e.append(h),b(e.contents())(d),d.$watch("view.input",function(a,b){a!==b&&(d.model=a)},!0)}}}]),angular.module("clicheApp").directive("argument",["$templateCache","$modal","Data",function(a,b,c){var d=0;return{restrict:"E",replace:!0,template:a.get("views/partials/argument.html"),scope:{name:"@",arg:"=ngModel",active:"=",form:"=",valuesFrom:"="},link:function(e){e.view={},d++,e.view.uniqueId=d,_.isUndefined(e.arg.valueFrom)||(e.arg.value=e.valuesFrom[e.arg.valueFrom]),e.toggleArgument=function(){e.active=!e.active},e.changeValueFrom=function(){e.arg.value=e.valuesFrom[e.arg.valueFrom]},e.$watch("arg.value",function(a,b){a===b||_.isEmpty(a)||(e.arg.valueFrom=null)}),e.removeItem=function(d){d.stopPropagation();var f=b.open({template:a.get("views/partials/confirm-delete.html"),controller:"ModalCtrl",windowClass:"modal-confirm",resolve:{data:function(){return{}}}});f.result.then(function(){c.deleteProperty("arg",e.name)})}}}}]),angular.module("clicheApp").directive("addProperty",["$templateCache","$modal",function(a,b){return{restrict:"E",replace:!0,template:'<a href ng-click="addItem($event)" class="btn btn-default"><i class="glyphicon glyphicon-plus"></i></a>',scope:{type:"@",platformFeatures:"=",valuesFrom:"="},link:function(c){c.addItem=function(d){d.stopPropagation(),b.open({template:a.get("views/partials/add-property-"+c.type+".html"),controller:"AddPropertyCtrl",windowClass:"modal-prop",resolve:{options:function(){return{type:c.type,platformFeatures:c.platformFeatures,valuesFrom:c.valuesFrom}}}})}}}}]),angular.module("clicheApp").filter("isEmpty",[function(){return function(a){return _.isEmpty(a)}}]),angular.module("clicheApp").filter("trim",[function(){return function(a){return a.trim()}}]),angular.module("clicheApp").filter("contains",[function(){return function(a,b){return _.contains(a,b)}}]),angular.module("clicheApp").factory("HTTPInterceptor",["$q","$rootScope","$location",function(a,b,c){c.protocol()+"://"+c.host();return{request:function(b){return b||a.when(b)},requestError:function(c){return b.$broadcast("httpError","An error occurred while attempting to send request to "+c.config.url),a.reject(c)},response:function(b){return b||a.when(b)},responseError:function(c){var d=_.isEmpty(c.data.message)?"An error occurred while attempting to retrieve response from "+c.config.url:c.data.message;return b.$broadcast("httpError",d),a.reject(c)}}}]),angular.module("clicheApp").factory("Data",["$localForage","$http","$q",function(a,b,c){var d={};return d.tool={},d.job=null,d.fetchTool=function(){var e=c.defer();return a.getItem("tool").then(function(c){_.isNull(c)||_.isEmpty(c)?b({method:"GET",url:"data/tool.json"}).success(function(b){d.tool=b.tool,e.resolve(b.tool),a.setItem("tool",b.tool)}).error(function(){e.reject("JSON file could not be fetched")}):(d.tool=c,e.resolve(c))}),e.promise},d.fetchJob=function(){var e=c.defer();return a.getItem("job").then(function(c){_.isNull(c)||_.isEmpty(c)?b({method:"GET",url:"data/job.json"}).success(function(b){d.job=b.job,e.resolve(b.job),a.setItem("job",b.job)}).error(function(){e.reject("JSON file could not be fetched")}):(d.job=c,e.resolve(c))}),e.promise},d.save=function(){var b=c.defer();return c.all([a.setItem("tool",d.tool),a.setItem("job",d.job)]).then(function(){b.resolve()}),b.promise},d.addProperty=function(a,b,c){switch(a){case"input":d.tool.inputs.properties[b]=c;break;case"output":d.tool.outputs.properties[b]=c;break;case"arg":d.tool.adapter.args.push(c)}},d.deleteProperty=function(a,b){switch(a){case"input":delete d.tool.inputs.properties[b];break;case"output":delete d.tool.outputs.properties[b];break;case"arg":d.tool.adapter.args.splice(b,1)}},d.applyTransform=function(a,b){var c;switch(a){case"transforms/strip_ext":var d=b.split(".");d[0]&&(c=d[0]);break;case"transforms/m-suffix":c=b+"M";break;default:c=b}return c},d.generateCommand=function(){var a=[],b=[],c=[];_.each(d.tool.inputs.properties,function(b,c){if(!_.isUndefined(d.job.inputs[c])){var e,f=_.isUndefined(b.adapter.prefix)?"":b.adapter.prefix,g=_.isUndefined(b.adapter.separator)||"_"===b.adapter.separator?" ":b.adapter.separator;if((_.isUndefined(b.adapter.listSeparator)||"_"===b.adapter.listSeparator)&&(b.adapter.listSeparator=" "),"array"===b.type){var h="repeat"===b.adapter.listSeparator?" "+f+g:b.adapter.listSeparator,i=[];_.each(d.job.inputs[c],function(a){var c=_.isObject(a)?a.path:a;i.push(d.applyTransform(b.adapter.listTransform,c))}),e=i.join(h)}else e="file"===b.type?d.applyTransform(b.adapter.transform,d.job.inputs[c].path):d.applyTransform(b.adapter.transform,d.job.inputs[c]);a.push(_.merge({key:c,order:b.adapter.order,value:e,prefix:f,separator:b.adapter.separator},b))}}),_.each(d.tool.adapter.args,function(a,c){var d=_.isUndefined(a.prefix)?"":a.prefix;b.push(_.merge({key:"arg"+c,order:a.order,prefix:d},a))});var e=_.sortBy(a.concat(b),"order");_.each(e,function(a){var b=_.isUndefined(a.separator)||"_"===a.separator?""===a.prefix?"":" ":""===a.prefix?"":a.separator,d=_.isUndefined(a.value)?"":a.value;c.push(a.prefix+b+d)});var f=d.tool.adapter.baseCmd.join(" ")+" "+c.join(" ")+" > "+d.tool.adapter.stdout;return f},d}]);